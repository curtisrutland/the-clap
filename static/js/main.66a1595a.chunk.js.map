{"version":3,"sources":["Content.js","App.js","index.js"],"names":["Content","_React$useState","React","useState","options","value","_React$useState2","Object","slicedToArray","token","setToken","_React$useState3","_React$useState4","input","setInput","_React$useState5","_React$useState6","buttonTxt","setButtonTxt","outputRef","useRef","inputRef","useEffect","current","focus","opts","map","o","i","react_default","a","createElement","Dropdown_default","Item","onClick","val","key","display","output","inputTokens","trim","split","filter","t","results","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","it","push","err","return","join","generateOutput","Form_default","Group","Label","Control","type","placeholder","onChange","evt","target","ref","InputGroup_default","FormControl_default","aria-label","e","DropdownButton_default","as","InputGroup","Append","variant","title","id","readOnly","Button_default","select","document","execCommand","setTimeout","App","Fragment","Navbar_default","bg","Container_default","Brand","href","style","marginTop","Row_default","Col_default","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.66a1595a.chunk.js","sourcesContent":["import React from 'react';\r\nimport options from \"./options.json\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nexport default function Content() {\r\n    const [token, setToken] = React.useState(options[0].value);\r\n    const [input, setInput] = React.useState(\"\");\r\n    const [buttonTxt, setButtonTxt] = React.useState(\"Copy to Clipboard\");\r\n\r\n    const outputRef = React.useRef(null);\r\n    const inputRef = React.useRef(null);\r\n\r\n    React.useEffect(() => inputRef.current.focus());\r\n\r\n    const handleSetToken = (val) => () => {\r\n        setToken(val);\r\n    }\r\n\r\n    const opts = options.map((o, i) => <Dropdown.Item onClick={handleSetToken(o.value)} key={i}>{o.display}</Dropdown.Item>)\r\n\r\n    function handleInputChange(evt) {\r\n        setInput(evt.target.value);\r\n    }\r\n\r\n    function generateOutput() {\r\n        const inputTokens = input.trim().split(' ').filter(t => t.trim() !== \"\");\r\n        let results = [];\r\n        for (let it of inputTokens) {\r\n            results.push(it);\r\n            results.push(token);\r\n        };\r\n        const out = results.join(' ');\r\n        return out;\r\n    }\r\n\r\n    function copy(evt) {\r\n        outputRef.current.select();\r\n        document.execCommand(\"copy\");\r\n        evt.target.focus();\r\n        setButtonTxt(\"Copied!\");\r\n        setTimeout(() => setButtonTxt(\"Copy to Clipboard\"), 3000);\r\n    }\r\n\r\n    const output = generateOutput();\r\n\r\n    return (\r\n        <Form>\r\n            <Form.Group>\r\n                <Form.Label>Input</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter phrase...\" value={input} onChange={handleInputChange} ref={inputRef} />\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label>Separator</Form.Label>\r\n                <InputGroup>\r\n                    <FormControl placeholder=\"Text to insert...\" aria-label=\"Text to insert...\" value={token} onChange={e => setToken(e.target.value)} />\r\n                    <DropdownButton as={InputGroup.Append} variant=\"outline-secondary\" title=\"Presets\" id=\"input-group-dropdown-2\">\r\n                        {opts}\r\n                    </DropdownButton>\r\n                </InputGroup>\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label>Results</Form.Label>\r\n                <InputGroup>\r\n                    <FormControl readOnly placeholder=\"Output goes here...\" value={output} ref={outputRef} />\r\n                    <InputGroup.Append>\r\n                        <Button variant=\"outline-secondary\" onClick={copy}>{buttonTxt}</Button>\r\n                    </InputGroup.Append>\r\n                </InputGroup>\r\n            </Form.Group>\r\n        </Form>\r\n    )\r\n}","import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Content from \"./Content\";\n\nfunction App() {\n\n\n\n  return (\n    <>\n      <Navbar bg=\"info\" variant=\"dark\">\n        <Container>\n          <Navbar.Brand href=\"#\">The Clap</Navbar.Brand>\n        </Container>\n      </Navbar>\n      <Container style={{marginTop: 20}}>\n        <Row>\n          <Col>\n            <Content />\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}